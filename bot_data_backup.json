{
  "timestamp": "2025-09-09T14:08:18.247389+00:00",
  "databases": {
    "staff_shifts.db": {
      "tables": {
        "shifts": {
          "schema": [
            [
              0,
              "shift_id",
              "INTEGER",
              0,
              null,
              1
            ],
            [
              1,
              "guild_id",
              "INTEGER",
              1,
              null,
              0
            ],
            [
              2,
              "user_id",
              "INTEGER",
              1,
              null,
              0
            ],
            [
              3,
              "start",
              "DATETIME",
              1,
              null,
              0
            ],
            [
              4,
              "end",
              "DATETIME",
              0,
              "NULL",
              0
            ],
            [
              5,
              "start_note",
              "TEXT",
              0,
              "NULL",
              0
            ],
            [
              6,
              "end_note",
              "TEXT",
              0,
              "NULL",
              0
            ]
          ],
          "data": [
            {
              "shift_id": 1,
              "guild_id": 1263067254153805905,
              "user_id": 1135729930366357536,
              "start": "2025-09-03 23:25:24.435376+00:00",
              "end": "2025-09-05 04:54:06.422779+00:00",
              "start_note": null,
              "end_note": null
            },
            {
              "shift_id": 2,
              "guild_id": 1263067254153805905,
              "user_id": 825572836181147648,
              "start": "2025-09-04 08:23:46.155842+00:00",
              "end": "2025-09-05 13:09:42.335043+00:00",
              "start_note": null,
              "end_note": null
            },
            {
              "shift_id": 3,
              "guild_id": 1263067254153805905,
              "user_id": 380987045008506880,
              "start": "2025-09-05 12:58:57.576653+00:00",
              "end": "2025-09-05 16:14:25.373523+00:00",
              "start_note": null,
              "end_note": null
            },
            {
              "shift_id": 4,
              "guild_id": 1263067254153805905,
              "user_id": 1135729930366357536,
              "start": "2025-09-06 00:34:02.372674+00:00",
              "end": "2025-09-06 05:25:14.890711+00:00",
              "start_note": null,
              "end_note": null
            },
            {
              "shift_id": 5,
              "guild_id": 1263067254153805905,
              "user_id": 825572836181147648,
              "start": "2025-09-06 08:42:17.357376+00:00",
              "end": "2025-09-06 12:08:42.106740+00:00",
              "start_note": null,
              "end_note": null
            },
            {
              "shift_id": 6,
              "guild_id": 1263067254153805905,
              "user_id": 955695820999639120,
              "start": "2025-09-07 07:01:58.010470+00:00",
              "end": "2025-09-07 15:44:53.860118+00:00",
              "start_note": null,
              "end_note": null
            },
            {
              "shift_id": 7,
              "guild_id": 1263067254153805905,
              "user_id": 1135729930366357536,
              "start": "2025-09-07 15:26:49.963929+00:00",
              "end": "2025-09-08 04:56:51.532939+00:00",
              "start_note": null,
              "end_note": null
            },
            {
              "shift_id": 8,
              "guild_id": 1263067254153805905,
              "user_id": 380987045008506880,
              "start": "2025-09-07 17:06:42.667284+00:00",
              "end": "2025-09-07 20:41:44.252627+00:00",
              "start_note": null,
              "end_note": "going to sleep"
            },
            {
              "shift_id": 9,
              "guild_id": 1263067254153805905,
              "user_id": 1058768857969479720,
              "start": "2025-09-07 19:03:21.477573+00:00",
              "end": "2025-09-07 20:32:50.129956+00:00",
              "start_note": null,
              "end_note": null
            },
            {
              "shift_id": 10,
              "guild_id": 1263067254153805905,
              "user_id": 704912146378653766,
              "start": "2025-09-08 07:42:45.087513+00:00",
              "end": "2025-09-08 09:50:55.423553+00:00",
              "start_note": null,
              "end_note": null
            },
            {
              "shift_id": 11,
              "guild_id": 1263067254153805905,
              "user_id": 1272204966416748698,
              "start": "2025-09-08 08:55:25.085680+00:00",
              "end": "2025-09-08 16:27:54.451011+00:00",
              "start_note": "Work",
              "end_note": null
            },
            {
              "shift_id": 12,
              "guild_id": 1263067254153805905,
              "user_id": 825572836181147648,
              "start": "2025-09-08 11:15:15.646019+00:00",
              "end": null,
              "start_note": null,
              "end_note": null
            },
            {
              "shift_id": 13,
              "guild_id": 1263067254153805905,
              "user_id": 955695820999639120,
              "start": "2025-09-08 11:15:35.728145+00:00",
              "end": "2025-09-08 14:59:12.694336+00:00",
              "start_note": null,
              "end_note": null
            },
            {
              "shift_id": 14,
              "guild_id": 1263067254153805905,
              "user_id": 1058768857969479720,
              "start": "2025-09-08 14:11:18.573556+00:00",
              "end": "2025-09-08 20:25:10.248932+00:00",
              "start_note": null,
              "end_note": "Am going to sleep"
            },
            {
              "shift_id": 15,
              "guild_id": 1263067254153805905,
              "user_id": 1135729930366357536,
              "start": "2025-09-09 02:04:31.843053+00:00",
              "end": null,
              "start_note": null,
              "end_note": null
            },
            {
              "shift_id": 16,
              "guild_id": 1263067254153805905,
              "user_id": 1058768857969479720,
              "start": "2025-09-09 05:10:56.438494+00:00",
              "end": "2025-09-09 13:37:17.984658+00:00",
              "start_note": "I didnt went to school today because am sick so imma moderate lol",
              "end_note": "am really tired rn, will resume in some hours"
            },
            {
              "shift_id": 17,
              "guild_id": 1263067254153805905,
              "user_id": 704912146378653766,
              "start": "2025-09-09 06:58:55.265402+00:00",
              "end": null,
              "start_note": null,
              "end_note": null
            },
            {
              "shift_id": 18,
              "guild_id": 1263067254153805905,
              "user_id": 1272204966416748698,
              "start": "2025-09-09 13:53:59.246261+00:00",
              "end": null,
              "start_note": null,
              "end_note": null
            }
          ]
        },
        "shift_settings": {
          "schema": [
            [
              0,
              "guild_id",
              "INTEGER",
              0,
              null,
              1
            ],
            [
              1,
              "log_channel_id",
              "INTEGER",
              0,
              "NULL",
              0
            ],
            [
              2,
              "staff_role_ids",
              "TEXT",
              0,
              "'[]'",
              0
            ]
          ],
          "data": [
            {
              "guild_id": 1263067254153805905,
              "log_channel_id": 1407256147760517151,
              "staff_role_ids": "[1403059755001577543, 1263076642234961941]"
            }
          ]
        }
      }
    },
    "staff_points.db": {
      "tables": {
        "staff_aura": {
          "schema": [
            [
              0,
              "user_id",
              "INTEGER",
              0,
              null,
              1
            ],
            [
              1,
              "aura",
              "INTEGER",
              0,
              "0",
              0
            ],
            [
              2,
              "total_earned",
              "INTEGER",
              0,
              "0",
              0
            ],
            [
              3,
              "total_spent",
              "INTEGER",
              0,
              "0",
              0
            ],
            [
              4,
              "last_updated",
              "TEXT",
              0,
              "CURRENT_TIMESTAMP",
              0
            ]
          ],
          "data": []
        },
        "aura_history": {
          "schema": [
            [
              0,
              "id",
              "INTEGER",
              0,
              null,
              1
            ],
            [
              1,
              "user_id",
              "INTEGER",
              1,
              null,
              0
            ],
            [
              2,
              "change_amount",
              "INTEGER",
              1,
              null,
              0
            ],
            [
              3,
              "change_type",
              "TEXT",
              1,
              null,
              0
            ],
            [
              4,
              "reason",
              "TEXT",
              0,
              null,
              0
            ],
            [
              5,
              "admin_id",
              "INTEGER",
              0,
              null,
              0
            ],
            [
              6,
              "timestamp",
              "TEXT",
              0,
              "CURRENT_TIMESTAMP",
              0
            ]
          ],
          "data": []
        },
        "sqlite_sequence": {
          "schema": [
            [
              0,
              "name",
              "",
              0,
              null,
              0
            ],
            [
              1,
              "seq",
              "",
              0,
              null,
              0
            ]
          ],
          "data": [
            {
              "name": "staff_points",
              "seq": 41
            },
            {
              "name": "points_history",
              "seq": 41
            }
          ]
        },
        "staff_points": {
          "schema": [
            [
              0,
              "id",
              "INTEGER",
              0,
              null,
              1
            ],
            [
              1,
              "guild_id",
              "INTEGER",
              1,
              null,
              0
            ],
            [
              2,
              "user_id",
              "INTEGER",
              1,
              null,
              0
            ],
            [
              3,
              "points",
              "INTEGER",
              0,
              "0",
              0
            ],
            [
              4,
              "total_earned",
              "INTEGER",
              0,
              "0",
              0
            ],
            [
              5,
              "total_spent",
              "INTEGER",
              0,
              "0",
              0
            ],
            [
              6,
              "last_updated",
              "TIMESTAMP",
              0,
              "CURRENT_TIMESTAMP",
              0
            ]
          ],
          "data": [
            {
              "id": 1,
              "guild_id": 1263067254153805905,
              "user_id": 1135729930366357536,
              "points": 33,
              "total_earned": 33,
              "total_spent": 0,
              "last_updated": "2025-09-07 10:37:19"
            },
            {
              "id": 2,
              "guild_id": 1263067254153805905,
              "user_id": 1186872689038729237,
              "points": 30,
              "total_earned": 1030,
              "total_spent": 1000,
              "last_updated": "2025-09-06 14:34:24"
            },
            {
              "id": 3,
              "guild_id": 1263067254153805905,
              "user_id": 380987045008506880,
              "points": 31,
              "total_earned": 31,
              "total_spent": 0,
              "last_updated": "2025-09-07 08:53:09"
            },
            {
              "id": 4,
              "guild_id": 1263067254153805905,
              "user_id": 1313117547486515273,
              "points": 28,
              "total_earned": 28,
              "total_spent": 0,
              "last_updated": "2025-09-08 04:08:26"
            },
            {
              "id": 5,
              "guild_id": 1263067254153805905,
              "user_id": 650253960409776148,
              "points": 23,
              "total_earned": 23,
              "total_spent": 0,
              "last_updated": "2025-09-07 14:59:42"
            },
            {
              "id": 6,
              "guild_id": 1263067254153805905,
              "user_id": 1116962351095238677,
              "points": 20,
              "total_earned": 20,
              "total_spent": 0,
              "last_updated": "2025-09-09 12:02:06"
            },
            {
              "id": 7,
              "guild_id": 1263067254153805905,
              "user_id": 1062747923294716006,
              "points": 15,
              "total_earned": 15,
              "total_spent": 0,
              "last_updated": "2025-09-04 15:34:00"
            },
            {
              "id": 8,
              "guild_id": 1263067254153805905,
              "user_id": 1239292183136174121,
              "points": 12,
              "total_earned": 12,
              "total_spent": 0,
              "last_updated": "2025-09-05 11:13:16"
            },
            {
              "id": 9,
              "guild_id": 1263067254153805905,
              "user_id": 704912146378653766,
              "points": 11,
              "total_earned": 11,
              "total_spent": 0,
              "last_updated": "2025-09-05 06:25:36"
            },
            {
              "id": 10,
              "guild_id": 1263067254153805905,
              "user_id": 1240445211218415626,
              "points": 3,
              "total_earned": 3,
              "total_spent": 0,
              "last_updated": "2025-09-04 15:34:37"
            },
            {
              "id": 11,
              "guild_id": 1263067254153805905,
              "user_id": 1359162600994373702,
              "points": 4,
              "total_earned": 4,
              "total_spent": 0,
              "last_updated": "2025-09-04 15:34:47"
            },
            {
              "id": 12,
              "guild_id": 1263067254153805905,
              "user_id": 1255539724743872535,
              "points": 3,
              "total_earned": 3,
              "total_spent": 0,
              "last_updated": "2025-09-04 15:34:56"
            },
            {
              "id": 13,
              "guild_id": 1263067254153805905,
              "user_id": 1126958577039454250,
              "points": 7,
              "total_earned": 7,
              "total_spent": 0,
              "last_updated": "2025-09-07 10:37:46"
            },
            {
              "id": 14,
              "guild_id": 1263067254153805905,
              "user_id": 825572836181147648,
              "points": 2,
              "total_earned": 2,
              "total_spent": 0,
              "last_updated": "2025-09-04 15:35:17"
            },
            {
              "id": 15,
              "guild_id": 1263067254153805905,
              "user_id": 856060454555222036,
              "points": 1,
              "total_earned": 1,
              "total_spent": 0,
              "last_updated": "2025-09-04 15:35:24"
            },
            {
              "id": 16,
              "guild_id": 1263067254153805905,
              "user_id": 1254854444625952932,
              "points": 15,
              "total_earned": 15,
              "total_spent": 0,
              "last_updated": "2025-09-04 15:35:57"
            },
            {
              "id": 20,
              "guild_id": 1263067254153805905,
              "user_id": 955695820999639120,
              "points": 1,
              "total_earned": 3,
              "total_spent": 2,
              "last_updated": "2025-09-08 09:46:45"
            },
            {
              "id": 28,
              "guild_id": 1263067254153805905,
              "user_id": 1286998001902030908,
              "points": 1,
              "total_earned": 1,
              "total_spent": 0,
              "last_updated": "2025-09-07 08:33:13"
            },
            {
              "id": 32,
              "guild_id": 1263067254153805905,
              "user_id": 1058768857969479720,
              "points": 9,
              "total_earned": 9,
              "total_spent": 0,
              "last_updated": "2025-09-09 06:49:52"
            },
            {
              "id": 35,
              "guild_id": 1263067254153805905,
              "user_id": 1272204966416748698,
              "points": 1,
              "total_earned": 1,
              "total_spent": 0,
              "last_updated": "2025-09-07 15:47:08"
            }
          ]
        },
        "points_history": {
          "schema": [
            [
              0,
              "id",
              "INTEGER",
              0,
              null,
              1
            ],
            [
              1,
              "guild_id",
              "INTEGER",
              1,
              null,
              0
            ],
            [
              2,
              "user_id",
              "INTEGER",
              1,
              null,
              0
            ],
            [
              3,
              "moderator_id",
              "INTEGER",
              1,
              null,
              0
            ],
            [
              4,
              "points_change",
              "INTEGER",
              1,
              null,
              0
            ],
            [
              5,
              "reason",
              "TEXT",
              0,
              null,
              0
            ],
            [
              6,
              "action_type",
              "TEXT",
              1,
              null,
              0
            ],
            [
              7,
              "timestamp",
              "TIMESTAMP",
              0,
              "CURRENT_TIMESTAMP",
              0
            ]
          ],
          "data": [
            {
              "id": 1,
              "guild_id": 1263067254153805905,
              "user_id": 1135729930366357536,
              "moderator_id": 955695820999639120,
              "points_change": 32,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:31:57"
            },
            {
              "id": 2,
              "guild_id": 1263067254153805905,
              "user_id": 1186872689038729237,
              "moderator_id": 955695820999639120,
              "points_change": 30,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:32:27"
            },
            {
              "id": 3,
              "guild_id": 1263067254153805905,
              "user_id": 380987045008506880,
              "moderator_id": 955695820999639120,
              "points_change": 29,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:32:50"
            },
            {
              "id": 4,
              "guild_id": 1263067254153805905,
              "user_id": 1313117547486515273,
              "moderator_id": 955695820999639120,
              "points_change": 25,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:33:20"
            },
            {
              "id": 5,
              "guild_id": 1263067254153805905,
              "user_id": 650253960409776148,
              "moderator_id": 955695820999639120,
              "points_change": 22,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:33:35"
            },
            {
              "id": 6,
              "guild_id": 1263067254153805905,
              "user_id": 1116962351095238677,
              "moderator_id": 955695820999639120,
              "points_change": 17,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:33:49"
            },
            {
              "id": 7,
              "guild_id": 1263067254153805905,
              "user_id": 1062747923294716006,
              "moderator_id": 955695820999639120,
              "points_change": 15,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:34:00"
            },
            {
              "id": 8,
              "guild_id": 1263067254153805905,
              "user_id": 1239292183136174121,
              "moderator_id": 955695820999639120,
              "points_change": 11,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:34:13"
            },
            {
              "id": 9,
              "guild_id": 1263067254153805905,
              "user_id": 704912146378653766,
              "moderator_id": 955695820999639120,
              "points_change": 10,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:34:26"
            },
            {
              "id": 10,
              "guild_id": 1263067254153805905,
              "user_id": 1240445211218415626,
              "moderator_id": 955695820999639120,
              "points_change": 3,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:34:37"
            },
            {
              "id": 11,
              "guild_id": 1263067254153805905,
              "user_id": 1359162600994373702,
              "moderator_id": 955695820999639120,
              "points_change": 4,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:34:47"
            },
            {
              "id": 12,
              "guild_id": 1263067254153805905,
              "user_id": 1255539724743872535,
              "moderator_id": 955695820999639120,
              "points_change": 3,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:34:56"
            },
            {
              "id": 13,
              "guild_id": 1263067254153805905,
              "user_id": 1126958577039454250,
              "moderator_id": 955695820999639120,
              "points_change": 1,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:35:09"
            },
            {
              "id": 14,
              "guild_id": 1263067254153805905,
              "user_id": 825572836181147648,
              "moderator_id": 955695820999639120,
              "points_change": 2,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:35:17"
            },
            {
              "id": 15,
              "guild_id": 1263067254153805905,
              "user_id": 856060454555222036,
              "moderator_id": 955695820999639120,
              "points_change": 1,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:35:24"
            },
            {
              "id": 16,
              "guild_id": 1263067254153805905,
              "user_id": 1254854444625952932,
              "moderator_id": 955695820999639120,
              "points_change": 15,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-04 15:35:57"
            },
            {
              "id": 17,
              "guild_id": 1263067254153805905,
              "user_id": 1126958577039454250,
              "moderator_id": 955695820999639120,
              "points_change": 1,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-05 04:00:18"
            },
            {
              "id": 18,
              "guild_id": 1263067254153805905,
              "user_id": 1186872689038729237,
              "moderator_id": 1399720532513132556,
              "points_change": 1,
              "reason": "Thanks from Aditya ✧ YC45",
              "action_type": "auto_add",
              "timestamp": "2025-09-05 06:05:57"
            },
            {
              "id": 19,
              "guild_id": 1263067254153805905,
              "user_id": 704912146378653766,
              "moderator_id": 1399720532513132556,
              "points_change": 1,
              "reason": "Thanks from Aditya ✧ YC45",
              "action_type": "auto_add",
              "timestamp": "2025-09-05 06:25:36"
            },
            {
              "id": 20,
              "guild_id": 1263067254153805905,
              "user_id": 955695820999639120,
              "moderator_id": 1399720532513132556,
              "points_change": 1,
              "reason": "Thanks from KillerNurse",
              "action_type": "auto_add",
              "timestamp": "2025-09-05 07:43:21"
            },
            {
              "id": 21,
              "guild_id": 1263067254153805905,
              "user_id": 955695820999639120,
              "moderator_id": 1399720532513132556,
              "points_change": 1,
              "reason": "Thanks from mafioso",
              "action_type": "auto_add",
              "timestamp": "2025-09-05 11:06:03"
            },
            {
              "id": 22,
              "guild_id": 1263067254153805905,
              "user_id": 1239292183136174121,
              "moderator_id": 1399720532513132556,
              "points_change": 1,
              "reason": "Thanks from Aditya ✧ YC45",
              "action_type": "auto_add",
              "timestamp": "2025-09-05 11:13:16"
            },
            {
              "id": 23,
              "guild_id": 1263067254153805905,
              "user_id": 380987045008506880,
              "moderator_id": 1399720532513132556,
              "points_change": 1,
              "reason": "Thanks from Aditya ✧ YC45",
              "action_type": "auto_add",
              "timestamp": "2025-09-05 14:17:15"
            },
            {
              "id": 24,
              "guild_id": 1263067254153805905,
              "user_id": 955695820999639120,
              "moderator_id": 955695820999639120,
              "points_change": -2,
              "reason": "No reason provided",
              "action_type": "remove",
              "timestamp": "2025-09-05 15:08:11"
            },
            {
              "id": 25,
              "guild_id": 1263067254153805905,
              "user_id": 1186872689038729237,
              "moderator_id": 1186872689038729237,
              "points_change": 999,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-05 15:09:50"
            },
            {
              "id": 26,
              "guild_id": 1263067254153805905,
              "user_id": 1126958577039454250,
              "moderator_id": 955695820999639120,
              "points_change": 2,
              "reason": "Thanks for bumping",
              "action_type": "add",
              "timestamp": "2025-09-06 04:25:47"
            },
            {
              "id": 27,
              "guild_id": 1263067254153805905,
              "user_id": 1186872689038729237,
              "moderator_id": 955695820999639120,
              "points_change": -1000,
              "reason": "No reason provided",
              "action_type": "remove",
              "timestamp": "2025-09-06 14:34:24"
            },
            {
              "id": 28,
              "guild_id": 1263067254153805905,
              "user_id": 1286998001902030908,
              "moderator_id": 1399720532513132556,
              "points_change": 1,
              "reason": "Thanks from ttahirdb",
              "action_type": "auto_add",
              "timestamp": "2025-09-07 08:33:13"
            },
            {
              "id": 29,
              "guild_id": 1263067254153805905,
              "user_id": 380987045008506880,
              "moderator_id": 1399720532513132556,
              "points_change": 1,
              "reason": "Thanks from Alt Aditya!",
              "action_type": "auto_add",
              "timestamp": "2025-09-07 08:53:09"
            },
            {
              "id": 30,
              "guild_id": 1263067254153805905,
              "user_id": 1126958577039454250,
              "moderator_id": 955695820999639120,
              "points_change": 2,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-07 10:37:03"
            },
            {
              "id": 31,
              "guild_id": 1263067254153805905,
              "user_id": 1135729930366357536,
              "moderator_id": 955695820999639120,
              "points_change": 1,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-07 10:37:19"
            },
            {
              "id": 32,
              "guild_id": 1263067254153805905,
              "user_id": 1058768857969479720,
              "moderator_id": 955695820999639120,
              "points_change": 2,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-07 10:37:37"
            },
            {
              "id": 33,
              "guild_id": 1263067254153805905,
              "user_id": 1126958577039454250,
              "moderator_id": 955695820999639120,
              "points_change": 1,
              "reason": "bump",
              "action_type": "add",
              "timestamp": "2025-09-07 10:37:46"
            },
            {
              "id": 34,
              "guild_id": 1263067254153805905,
              "user_id": 650253960409776148,
              "moderator_id": 1399720532513132556,
              "points_change": 1,
              "reason": "Thanks from Chaosraph",
              "action_type": "auto_add",
              "timestamp": "2025-09-07 14:59:42"
            },
            {
              "id": 35,
              "guild_id": 1263067254153805905,
              "user_id": 1272204966416748698,
              "moderator_id": 1399720532513132556,
              "points_change": 1,
              "reason": "Thanks from Aditya ✧ YC45",
              "action_type": "auto_add",
              "timestamp": "2025-09-07 15:47:08"
            },
            {
              "id": 36,
              "guild_id": 1263067254153805905,
              "user_id": 1313117547486515273,
              "moderator_id": 955695820999639120,
              "points_change": 3,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-08 04:08:26"
            },
            {
              "id": 37,
              "guild_id": 1263067254153805905,
              "user_id": 955695820999639120,
              "moderator_id": 1399720532513132556,
              "points_change": 1,
              "reason": "Thanks from Uchiha",
              "action_type": "auto_add",
              "timestamp": "2025-09-08 09:46:45"
            },
            {
              "id": 38,
              "guild_id": 1263067254153805905,
              "user_id": 1058768857969479720,
              "moderator_id": 955695820999639120,
              "points_change": 3,
              "reason": "bump+welcoming new members+activity and suggestions",
              "action_type": "add",
              "timestamp": "2025-09-08 17:22:04"
            },
            {
              "id": 39,
              "guild_id": 1263067254153805905,
              "user_id": 1058768857969479720,
              "moderator_id": 1399720532513132556,
              "points_change": 1,
              "reason": "Thanks from Aditya ✧ YC45",
              "action_type": "auto_add",
              "timestamp": "2025-09-08 17:29:28"
            },
            {
              "id": 40,
              "guild_id": 1263067254153805905,
              "user_id": 1058768857969479720,
              "moderator_id": 955695820999639120,
              "points_change": 3,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-09 06:49:52"
            },
            {
              "id": 41,
              "guild_id": 1263067254153805905,
              "user_id": 1116962351095238677,
              "moderator_id": 955695820999639120,
              "points_change": 3,
              "reason": "No reason provided",
              "action_type": "add",
              "timestamp": "2025-09-09 12:02:06"
            }
          ]
        },
        "staff_config": {
          "schema": [
            [
              0,
              "guild_id",
              "INTEGER",
              0,
              null,
              1
            ],
            [
              1,
              "staff_role_ids",
              "TEXT",
              0,
              null,
              0
            ],
            [
              2,
              "points_channel_id",
              "INTEGER",
              0,
              null,
              0
            ],
            [
              3,
              "auto_rewards",
              "TEXT",
              0,
              null,
              0
            ],
            [
              4,
              "daily_bonus",
              "INTEGER",
              0,
              "0",
              0
            ],
            [
              5,
              "weekly_bonus",
              "INTEGER",
              0,
              "0",
              0
            ]
          ],
          "data": [
            {
              "guild_id": 1263067254153805905,
              "staff_role_ids": "1403059755001577543",
              "points_channel_id": null,
              "auto_rewards": null,
              "daily_bonus": 0,
              "weekly_bonus": 0
            }
          ]
        }
      }
    },
    "codeverse_bot.db": {
      "tables": {
        "elections": {
          "schema": [
            [
              0,
              "guild_id",
              "INTEGER",
              0,
              null,
              1
            ],
            [
              1,
              "title",
              "TEXT",
              1,
              null,
              0
            ],
            [
              2,
              "candidates",
              "TEXT",
              1,
              null,
              0
            ],
            [
              3,
              "votes",
              "TEXT",
              0,
              "'{}'",
              0
            ],
            [
              4,
              "end_time",
              "TEXT",
              1,
              null,
              0
            ],
            [
              5,
              "created_at",
              "TEXT",
              0,
              "CURRENT_TIMESTAMP",
              0
            ]
          ],
          "data": []
        },
        "bot_settings": {
          "schema": [
            [
              0,
              "guild_id",
              "INTEGER",
              0,
              null,
              1
            ],
            [
              1,
              "settings_json",
              "TEXT",
              0,
              "'{}'",
              0
            ]
          ],
          "data": []
        }
      }
    }
  },
  "json_files": {
    "questions.json": [
      {
        "question": "What is your favorite programming language and why?",
        "difficulty": "Easy",
        "category": "General Programming"
      },
      {
        "question": "Explain the difference between == and === in JavaScript",
        "difficulty": "Beginner",
        "category": "JavaScript",
        "hint": "Think about type coercion"
      },
      {
        "question": "What are the four pillars of Object-Oriented Programming?",
        "difficulty": "Beginner",
        "category": "OOP"
      },
      {
        "question": "How would you implement a stack using two queues?",
        "difficulty": "Medium",
        "category": "Data Structures",
        "hint": "Think about how stack and queue operations differ"
      },
      {
        "question": "What is the time complexity of binary search and why?",
        "difficulty": "Medium",
        "category": "Algorithms"
      },
      {
        "question": "Explain the concept of closures in programming",
        "difficulty": "Medium",
        "category": "Programming Concepts",
        "hint": "Think about scope and function contexts"
      },
      {
        "question": "What is the difference between SQL and NoSQL databases?",
        "difficulty": "Medium",
        "category": "Databases"
      },
      {
        "question": "How does garbage collection work in programming languages?",
        "difficulty": "Hard",
        "category": "Memory Management"
      },
      {
        "question": "What is Big O notation and why is it important?",
        "difficulty": "Medium",
        "category": "Algorithms",
        "hint": "Think about algorithm efficiency"
      },
      {
        "question": "Explain the difference between synchronous and asynchronous programming",
        "difficulty": "Medium",
        "category": "Programming Concepts"
      },
      {
        "question": "What is the most challenging bug you have ever encountered?",
        "difficulty": "Easy",
        "category": "Personal Experience"
      },
      {
        "question": "How do you stay updated with the latest programming trends?",
        "difficulty": "Easy",
        "category": "Learning"
      },
      {
        "question": "What is recursion and when would you use it?",
        "difficulty": "Medium",
        "category": "Programming Concepts",
        "hint": "A function that calls itself"
      },
      {
        "question": "Explain the MVC (Model-View-Controller) pattern",
        "difficulty": "Medium",
        "category": "Software Architecture"
      },
      {
        "question": "What are APIs and how do they work?",
        "difficulty": "Beginner",
        "category": "Web Development"
      },
      {
        "question": "What is the difference between a compiler and an interpreter?",
        "difficulty": "Medium",
        "category": "Programming Languages"
      },
      {
        "question": "How would you optimize a slow-running SQL query?",
        "difficulty": "Hard",
        "category": "Database Optimization",
        "hint": "Think about indexes, query structure, and execution plans"
      },
      {
        "question": "What is the difference between HTTP and HTTPS?",
        "difficulty": "Beginner",
        "category": "Web Security"
      },
      {
        "question": "Explain the concept of polymorphism in OOP",
        "difficulty": "Medium",
        "category": "OOP",
        "hint": "One interface, multiple implementations"
      },
      {
        "question": "What are design patterns and name three common ones",
        "difficulty": "Hard",
        "category": "Software Design"
      },
      {
        "question": "How would you implement a LRU (Least Recently Used) cache?",
        "difficulty": "Hard",
        "category": "Data Structures",
        "hint": "Think about combining hash map with doubly linked list"
      },
      {
        "question": "What is version control and why is it important?",
        "difficulty": "Beginner",
        "category": "Development Tools"
      },
      {
        "question": "Explain the difference between unit testing and integration testing",
        "difficulty": "Medium",
        "category": "Testing"
      },
      {
        "question": "What is the CAP theorem in distributed systems?",
        "difficulty": "Hard",
        "category": "Distributed Systems",
        "hint": "Consistency, Availability, Partition tolerance"
      },
      {
        "question": "How would you handle a situation where your code works on your machine but not in production?",
        "difficulty": "Medium",
        "category": "Debugging"
      },
      {
        "question": "What is the difference between machine learning and artificial intelligence?",
        "difficulty": "Medium",
        "category": "AI/ML"
      },
      {
        "question": "Explain what happens when you type a URL in your browser and press Enter",
        "difficulty": "Hard",
        "category": "Web Development"
      },
      {
        "question": "What is the purpose of virtual environments in Python?",
        "difficulty": "Beginner",
        "category": "Python"
      },
      {
        "question": "How do you ensure your code is secure?",
        "difficulty": "Medium",
        "category": "Security"
      },
      {
        "question": "What advice would you give to someone just starting their programming journey?",
        "difficulty": "Easy",
        "category": "Learning"
      }
    ],
    "challenges.json": [
      {
        "title": "FizzBuzz Extended",
        "description": "Write a program that prints numbers from 1 to 100. For multiples of 3 print 'Fizz', for multiples of 5 print 'Buzz', for multiples of 7 print 'Bang', and for multiples of both print the combination (e.g., 'FizzBuzz', 'FizzBang', 'BuzzBang', 'FizzBuzzBang').",
        "difficulty": "Beginner",
        "estimated_time": "30-60 minutes",
        "category": "Logic & Math",
        "requirements": [
          "Handle numbers 1 to 100",
          "Print 'Fizz' for multiples of 3",
          "Print 'Buzz' for multiples of 5",
          "Print 'Bang' for multiples of 7",
          "Combine words for multiple conditions",
          "Print the number if none of the conditions apply"
        ],
        "bonus_features": [
          "Make it configurable for different ranges",
          "Add command line arguments",
          "Create a web interface",
          "Add more rules dynamically"
        ]
      },
      {
        "title": "Smart To-Do List",
        "description": "Create a command-line to-do list application with advanced features like priority levels, due dates, categories, and search functionality.",
        "difficulty": "Medium",
        "estimated_time": "2-4 hours",
        "category": "CLI Applications",
        "requirements": [
          "Add, edit, and delete tasks",
          "Set priority levels (High, Medium, Low)",
          "Assign due dates to tasks",
          "Categorize tasks with tags",
          "Mark tasks as complete/incomplete",
          "Search and filter tasks",
          "Save data persistently"
        ],
        "bonus_features": [
          "Color-coded output",
          "Export to different formats (JSON, CSV)",
          "Recurring tasks",
          "Task statistics and analytics",
          "Integration with calendar APIs"
        ]
      },
      {
        "title": "URL Shortener Service",
        "description": "Build a URL shortener service similar to bit.ly with a web interface and API endpoints.",
        "difficulty": "Hard",
        "estimated_time": "4-8 hours",
        "category": "Web Development",
        "requirements": [
          "Shorten long URLs to unique short codes",
          "Redirect short URLs to original URLs",
          "Web interface for creating short URLs",
          "REST API endpoints",
          "Click tracking and analytics",
          "Custom alias support",
          "Database storage"
        ],
        "bonus_features": [
          "User authentication and personal URL management",
          "QR code generation",
          "Link expiration dates",
          "Bulk URL shortening",
          "Advanced analytics dashboard",
          "API rate limiting"
        ]
      },
      {
        "title": "Expense Tracker",
        "description": "Create a personal expense tracking application with categories, budgets, and reporting features.",
        "difficulty": "Medium",
        "estimated_time": "3-5 hours",
        "category": "Desktop/Web Application",
        "requirements": [
          "Add, edit, delete expenses",
          "Categorize expenses (Food, Transport, Entertainment, etc.)",
          "Set monthly budgets per category",
          "Generate expense reports",
          "Data visualization (charts/graphs)",
          "Export data to CSV/PDF",
          "Date range filtering"
        ],
        "bonus_features": [
          "Receipt photo attachments",
          "Currency conversion",
          "Recurring expense tracking",
          "Budget alerts and notifications",
          "Mobile-responsive design",
          "Multi-user support"
        ]
      },
      {
        "title": "Code Snippet Manager",
        "description": "Build a tool for developers to store, organize, and quickly access their code snippets with syntax highlighting and search capabilities.",
        "difficulty": "Medium",
        "estimated_time": "2-4 hours",
        "category": "Developer Tools",
        "requirements": [
          "Store code snippets with title and description",
          "Support multiple programming languages",
          "Syntax highlighting",
          "Tag-based organization",
          "Search functionality",
          "Copy to clipboard feature",
          "Import/export snippets"
        ],
        "bonus_features": [
          "Version control for snippets",
          "Sharing snippets publicly",
          "Integration with popular editors",
          "Snippet templates",
          "Collaborative features",
          "API for external access"
        ]
      },
      {
        "title": "Real-time Chat Application",
        "description": "Develop a real-time chat application with multiple rooms, user authentication, and message history.",
        "difficulty": "Hard",
        "estimated_time": "6-10 hours",
        "category": "Real-time Applications",
        "requirements": [
          "User registration and authentication",
          "Multiple chat rooms",
          "Real-time messaging",
          "Message history storage",
          "Online user indicators",
          "Private messaging",
          "File sharing capabilities"
        ],
        "bonus_features": [
          "Message reactions and emojis",
          "Voice/video calls",
          "Screen sharing",
          "Message encryption",
          "Custom themes",
          "Bot integration",
          "Mobile app companion"
        ]
      },
      {
        "title": "Password Manager",
        "description": "Create a secure password manager with encryption, password generation, and browser integration.",
        "difficulty": "Hard",
        "estimated_time": "5-8 hours",
        "category": "Security Applications",
        "requirements": [
          "Secure password storage with encryption",
          "Master password authentication",
          "Password generator with customizable criteria",
          "Website/application categorization",
          "Search and filter passwords",
          "Password strength analyzer",
          "Backup and restore functionality"
        ],
        "bonus_features": [
          "Browser extension integration",
          "Two-factor authentication support",
          "Password breach checking",
          "Secure notes storage",
          "Emergency access features",
          "Cross-platform synchronization"
        ]
      },
      {
        "title": "API Rate Limiter",
        "description": "Implement a rate limiting system for APIs with different algorithms and storage backends.",
        "difficulty": "Hard",
        "estimated_time": "4-6 hours",
        "category": "Backend Systems",
        "requirements": [
          "Token bucket algorithm implementation",
          "Fixed window rate limiting",
          "Sliding window rate limiting",
          "Per-user and per-IP limiting",
          "Redis/Memory storage options",
          "HTTP middleware integration",
          "Configuration management"
        ],
        "bonus_features": [
          "Rate limiting analytics",
          "Dynamic rate limit adjustment",
          "Multiple rate limit tiers",
          "Rate limit bypass for premium users",
          "Distributed rate limiting",
          "Custom rate limit rules"
        ]
      },
      {
        "title": "Mini Search Engine",
        "description": "Build a basic search engine that can crawl, index, and search through a collection of documents or web pages.",
        "difficulty": "Hard",
        "estimated_time": "6-10 hours",
        "category": "Information Retrieval",
        "requirements": [
          "Web crawler for collecting documents",
          "Text indexing and preprocessing",
          "TF-IDF or similar ranking algorithm",
          "Search query processing",
          "Results ranking and pagination",
          "Basic web interface",
          "Performance optimization"
        ],
        "bonus_features": [
          "Advanced search operators",
          "Image and document search",
          "Autocomplete suggestions",
          "Search analytics",
          "Personalized results",
          "Machine learning ranking"
        ]
      },
      {
        "title": "Game Leaderboard System",
        "description": "Design a scalable leaderboard system for games with real-time updates, multiple ranking types, and anti-cheat measures.",
        "difficulty": "Medium",
        "estimated_time": "3-6 hours",
        "category": "Game Development",
        "requirements": [
          "Player score submission and validation",
          "Real-time leaderboard updates",
          "Multiple leaderboard types (daily, weekly, all-time)",
          "Pagination for large leaderboards",
          "Player ranking and position tracking",
          "Score history and trends",
          "Basic anti-cheat validation"
        ],
        "bonus_features": [
          "Tournament bracket systems",
          "Achievement and badge systems",
          "Social features (friends, following)",
          "Advanced anti-cheat algorithms",
          "Mobile push notifications",
          "Analytics dashboard for game developers"
        ]
      }
    ],
    "quotes.json": [
      "The only way to do great work is to love what you do. - Steve Jobs",
      "Programming isn't about what you know; it's about what you can figure out. - Chris Pine",
      "Code is like humor. When you have to explain it, it's bad. - Cory House",
      "The best way to predict the future is to invent it. - Alan Kay",
      "Simplicity is the soul of efficiency. - Austin Freeman",
      "In programming, the hard part isn't solving problems, but deciding what problems to solve. - Paul Graham",
      "First, solve the problem. Then, write the code. - John Johnson",
      "Experience is the name everyone gives to their mistakes. - Oscar Wilde",
      "Talk is cheap. Show me the code. - Linus Torvalds",
      "Any fool can write code that a computer can understand. Good programmers write code that humans can understand. - Martin Fowler",
      "Programming is not about typing, it's about thinking. - Rich Hickey",
      "The most important property of a program is whether it accomplishes the intention of its user. - C.A.R. Hoare",
      "Debugging is twice as hard as writing the code in the first place. - Brian Kernighan",
      "Make it work, make it right, make it fast. - Kent Beck",
      "Premature optimization is the root of all evil. - Donald Knuth",
      "Code never lies, comments sometimes do. - Ron Jeffries",
      "Programs must be written for people to read, and only incidentally for machines to execute. - Harold Abelson",
      "The best error message is the one that never shows up. - Thomas Fuchs",
      "It's not a bug – it's an undocumented feature. - Anonymous",
      "Programming is the art of algorithm design and the craft of debugging errant code. - Ellen Ullman",
      "Learning to write programs stretches your mind, and helps you think better. - Bill Gates",
      "Every great developer you know got there by solving problems they were unqualified to solve until they actually did it. - Patrick McKenzie",
      "The function of good software is to make the complex appear to be simple. - Grady Booch",
      "Software is a great combination between artistry and engineering. - Bill Gates",
      "Clean code always looks like it was written by someone who cares. - Robert C. Martin",
      "Code is read much more often than it is written. - Guido van Rossum",
      "The only way to learn a new programming language is by writing programs in it. - Dennis Ritchie",
      "Simplicity is prerequisite for reliability. - Edsger W. Dijkstra",
      "Good code is its own best documentation. - Steve McConnell",
      "Programming is not a science. Programming is a craft. - Richard Stallman",
      "Don't comment bad code—rewrite it. - Brian Kernighan",
      "Measuring programming progress by lines of code is like measuring aircraft building progress by weight. - Bill Gates",
      "Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live. - Martin Golding",
      "There are only two hard things in Computer Science: cache invalidation and naming things. - Phil Karlton",
      "Walking on water and developing software from a specification are easy if both are frozen. - Edward V Berard",
      "Programming today is a race between software engineers striving to build bigger and better idiot-proof programs, and the Universe trying to produce bigger and better idiots. - Rick Cook",
      "The computer was born to solve problems that did not exist before. - Bill Gates",
      "The best thing about a boolean is even if you are wrong, you are only off by a bit. - Anonymous",
      "If debugging is the process of removing software bugs, then programming must be the process of putting them in. - Edsger Dijkstra",
      "Programming is like sex. One mistake and you have to support it for the rest of your life. - Michael Sinz",
      "It's not that I'm so smart, it's just that I stay with problems longer. - Albert Einstein",
      "Success is not final, failure is not fatal: it is the courage to continue that counts. - Winston Churchill",
      "The way to get started is to quit talking and begin doing. - Walt Disney",
      "Innovation distinguishes between a leader and a follower. - Steve Jobs",
      "Your limitation—it's only your imagination.",
      "Push yourself, because no one else is going to do it for you.",
      "Great things never come from comfort zones.",
      "Dream it. Wish it. Do it.",
      "Don't stop when you're tired. Stop when you're done.",
      "Wake up with determination. Go to bed with satisfaction."
    ],
    "quotes_new.json": [
      "The only way to do great work is to love what you do. - Steve Jobs",
      "Programming isn't about what you know; it's about what you can figure out. - Chris Pine",
      "Code is like humor. When you have to explain it, it's bad. - Cory House",
      "The best way to predict the future is to invent it. - Alan Kay",
      "Simplicity is the soul of efficiency. - Austin Freeman",
      "In programming, the hard part isn't solving problems, but deciding what problems to solve. - Paul Graham",
      "First, solve the problem. Then, write the code. - John Johnson",
      "Experience is the name everyone gives to their mistakes. - Oscar Wilde",
      "Talk is cheap. Show me the code. - Linus Torvalds",
      "Any fool can write code that a computer can understand. Good programmers write code that humans can understand. - Martin Fowler",
      "Programming is not about typing, it's about thinking. - Rich Hickey",
      "The most important property of a program is whether it accomplishes the intention of its user. - C.A.R. Hoare",
      "Debugging is twice as hard as writing the code in the first place. - Brian Kernighan",
      "Make it work, make it right, make it fast. - Kent Beck",
      "Premature optimization is the root of all evil. - Donald Knuth",
      "Code never lies, comments sometimes do. - Ron Jeffries",
      "Programs must be written for people to read, and only incidentally for machines to execute. - Harold Abelson",
      "The best error message is the one that never shows up. - Thomas Fuchs",
      "It's not a bug – it's an undocumented feature. - Anonymous",
      "Programming is the art of algorithm design and the craft of debugging errant code. - Ellen Ullman",
      "Learning to write programs stretches your mind, and helps you think better. - Bill Gates",
      "Every great developer you know got there by solving problems they were unqualified to solve until they actually did it. - Patrick McKenzie",
      "The function of good software is to make the complex appear to be simple. - Grady Booch",
      "Software is a great combination between artistry and engineering. - Bill Gates",
      "Clean code always looks like it was written by someone who cares. - Robert C. Martin",
      "Code is read much more often than it is written. - Guido van Rossum",
      "The only way to learn a new programming language is by writing programs in it. - Dennis Ritchie",
      "Simplicity is prerequisite for reliability. - Edsger W. Dijkstra",
      "Good code is its own best documentation. - Steve McConnell",
      "Programming is not a science. Programming is a craft. - Richard Stallman",
      "Don't comment bad code—rewrite it. - Brian Kernighan",
      "Measuring programming progress by lines of code is like measuring aircraft building progress by weight. - Bill Gates",
      "Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live. - Martin Golding",
      "There are only two hard things in Computer Science: cache invalidation and naming things. - Phil Karlton",
      "Walking on water and developing software from a specification are easy if both are frozen. - Edward V Berard",
      "Programming today is a race between software engineers striving to build bigger and better idiot-proof programs, and the Universe trying to produce bigger and better idiots. - Rick Cook",
      "The computer was born to solve problems that did not exist before. - Bill Gates",
      "The best thing about a boolean is even if you are wrong, you are only off by a bit. - Anonymous",
      "If debugging is the process of removing software bugs, then programming must be the process of putting them in. - Edsger Dijkstra",
      "Programming is like sex. One mistake and you have to support it for the rest of your life. - Michael Sinz",
      "It's not that I'm so smart, it's just that I stay with problems longer. - Albert Einstein",
      "Success is not final, failure is not fatal: it is the courage to continue that counts. - Winston Churchill",
      "The way to get started is to quit talking and begin doing. - Walt Disney",
      "Innovation distinguishes between a leader and a follower. - Steve Jobs",
      "Your limitation—it's only your imagination.",
      "Push yourself, because no one else is going to do it for you.",
      "Great things never come from comfort zones.",
      "Dream it. Wish it. Do it.",
      "Don't stop when you're tired. Stop when you're done.",
      "Wake up with determination. Go to bed with satisfaction."
    ],
    "code_snippets.json": {
      "python": [
        {
          "description": "List Comprehension Example",
          "code": "squares = [x**2 for x in range(10)]\nprint(squares)  # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]",
          "explanation": "List comprehensions provide a concise way to create lists based on existing iterables."
        },
        {
          "description": "Dictionary Comprehension",
          "code": "word_lengths = {word: len(word) for word in ['python', 'code', 'bot']}\nprint(word_lengths)  # {'python': 6, 'code': 4, 'bot': 3}",
          "explanation": "Dictionary comprehensions create dictionaries in a single line of code."
        },
        {
          "description": "Context Manager for File Handling",
          "code": "with open('file.txt', 'r') as f:\n    content = f.read()\n    # File automatically closed",
          "explanation": "Context managers ensure proper resource cleanup, especially useful for file operations."
        },
        {
          "description": "Enumerate Function",
          "code": "items = ['apple', 'banana', 'cherry']\nfor index, item in enumerate(items):\n    print(f'{index}: {item}')",
          "explanation": "Enumerate provides both index and value when iterating over sequences."
        },
        {
          "description": "Lambda Functions",
          "code": "numbers = [1, 2, 3, 4, 5]\nsquared = list(map(lambda x: x**2, numbers))\nprint(squared)  # [1, 4, 9, 16, 25]",
          "explanation": "Lambda functions are anonymous functions useful for short, simple operations."
        }
      ],
      "javascript": [
        {
          "description": "Array Destructuring",
          "code": "const [first, second, ...rest] = [1, 2, 3, 4, 5];\nconsole.log(first, second, rest); // 1 2 [3, 4, 5]",
          "explanation": "Destructuring allows unpacking values from arrays into distinct variables."
        },
        {
          "description": "Object Destructuring",
          "code": "const {name, age} = {name: 'John', age: 25, city: 'NYC'};\nconsole.log(name, age); // John 25",
          "explanation": "Object destructuring extracts properties from objects into variables."
        },
        {
          "description": "Arrow Functions",
          "code": "const multiply = (a, b) => a * b;\nconst square = x => x * x;\nconsole.log(multiply(3, 4)); // 12",
          "explanation": "Arrow functions provide a shorter syntax for writing functions."
        },
        {
          "description": "Template Literals",
          "code": "const name = 'World';\nconst greeting = `Hello, ${name}!`;\nconsole.log(greeting); // Hello, World!",
          "explanation": "Template literals allow embedded expressions and multi-line strings."
        },
        {
          "description": "Promise with Async/Await",
          "code": "async function fetchData() {\n  try {\n    const response = await fetch('/api/data');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}",
          "explanation": "Async/await provides a cleaner way to handle asynchronous operations."
        }
      ],
      "java": [
        {
          "description": "Stream API Example",
          "code": "List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5);\nList<Integer> squared = numbers.stream()\n    .map(x -> x * x)\n    .collect(Collectors.toList());",
          "explanation": "Java Streams provide functional-style operations on collections."
        },
        {
          "description": "Optional for Null Safety",
          "code": "Optional<String> optional = Optional.ofNullable(getString());\noptional.ifPresent(System.out::println);\nString result = optional.orElse(\"Default\");",
          "explanation": "Optional helps avoid NullPointerExceptions by wrapping potentially null values."
        }
      ],
      "react": [
        {
          "description": "useState Hook",
          "code": "import React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  \n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={() => setCount(count + 1)}>+</button>\n    </div>\n  );\n}",
          "explanation": "useState is a Hook that lets you add state to functional components."
        },
        {
          "description": "useEffect Hook",
          "code": "import React, { useState, useEffect } from 'react';\n\nfunction Timer() {\n  const [seconds, setSeconds] = useState(0);\n  \n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds(s => s + 1);\n    }, 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n  \n  return <div>Seconds: {seconds}</div>;\n}",
          "explanation": "useEffect lets you perform side effects in functional components."
        }
      ]
    }
  },
  "config": {
    "last_backup": "2025-09-09T14:08:18.338408+00:00",
    "version": "1.0",
    "bot_instance": "unknown"
  }
}